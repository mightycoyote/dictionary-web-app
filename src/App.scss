@import './custom.scss';

/* comp sizes: 375px, 768px, 1440px w/ 736px content width */

body {
  overflow: visible;
  margin: 0;
}

.app {
  /* font-size for the main text (definition bullets) */
  font-size: $c15-to-18;
  color: $gray3;

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    color: $gray3;
  }

  background-color: white;

  /* top padding should go up to 58px, side 40px */
  padding-top: clamp(1.5rem, 5vw, 3.625rem);
  padding-bottom: clamp(1.5rem, 5vw, 3.625rem);
  padding-left: clamp(24px, 6vw, 40px);
  padding-right: clamp(24px, 6vw, 40px);

  overflow: auto;
}

.app.sanserif {
  font-family: $sanserif;
}

.app.serif {
  font-family: $serif;
}

.app.mono {
  font-family: $mono;
}

.wrapper {
  max-width: 46rem;
  margin: 0 auto;
  min-height: 100vh;
}

.hidden {
  display: none;
}

img {
  max-width: 100%;
  display: block;
}

// header

header {
  display: flex;
  justify-content: space-between;
  /* should be 32px to 36.5px tall */
  height: $c32-to-36-5;
  align-items: center;
  margin-bottom: 3rem;

  svg {
    height: $c32-to-36-5;
    width: $c32-to-36-5;
  }
}

.selectors {
  display: flex;
  align-items: center;
}

.divider {
  width: 1px;
  height: $c32-to-36-5;
  background-color: $gray6;
  margin-top: 0px;
  margin-bottom: 0px;
  margin-left: max(10px, 1vw);
  margin-right: max(10px, 1vw);
}

// font select

// this element must be replaced altogether to customize further,
// and accessibility is a huge problem with homebrewed ones

#fontselect {
  font-size: $c14-to-18;
  font-weight: 700;
  color: inherit;
  background-color: inherit;
  border: none;
  /* replace CoreUI's custom caret with the one for this design */
  background-image: url(./assets/images/icon-arrow-down.svg);
  padding-top: 0;
  padding-bottom: 0;
  padding-right: 46px;
  cursor: pointer;

  &:focus {
    border: 1px solid $purple;
    box-shadow: none;
    outline: none;
  }
}

// darkmode select
/* this element (toggle plus icon together) is 20px high at all screen sizes */

.darkmodeform {
  display: flex;
  flex-direction: row;
  align-items: center;
  // height: $s20;
  gap: 15px;
  cursor: pointer;

  * {
    cursor: inherit;
  }

  .moon {
    height: $s20;
    width: $s20;
  }

  &:hover {
    svg path {
      stroke: $purple;
    }

    .form-check-input {
      background-color: $purple;
    }
  }
}

// these are CoreUI classes used for the CSS switch element

.form-check {
  margin-bottom: 0;
}

.form-check-input {
  background-color: $gray5;
  height: 1.5em;

  &:hover {
    background-color: $purple;
  }
}

.form-switch .form-check-input {
  background-image: url("data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27rgba%28255, 255, 255, 1%29%27/%3e%3c/svg%3e");
  width: 3em;

  &:checked {
    border-color: none;
  }

  &:focus {
    border-color: $purple;
    box-shadow: none;
    background-image: url("data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27rgba%28255, 255, 255, 1%29%27/%3e%3c/svg%3e");
  }
}

// search

.inputwrapper {
  display: flex;
  margin: 1.5rem 0 0 0;
  justify-content: flex-end;
  align-items: center;
  position: relative;
}

.input {
  width: 100%;
  font-weight: 700;
  font-family: inherit;
  height: $c48-to-64;
  font-size: $c16-to-20;
  border-radius: 15px;
  padding-left: 20px;
  padding-right: 20px;
  background-color: $gray7;
  caret-color: $purple;
  cursor: pointer;
  color: inherit;
  border: none;

  &:focus {
    border: 1px solid $purple;
    box-shadow: none;
    background-color: $gray7;
    color: inherit;
  }
}

.searchbutton {
  position: absolute;
  margin-right: 14px;
  border: none;
  background-color: inherit;
  padding: 0 6px;
}

.empty {
  border-color: $red;

  &:focus {
    border-color: $red;
  }
}

.empty-help {
  color: $red;
}

// CoreUI class - remove border flash when focusing element
.form-control {
  transition: none;
}

// result

.wordheader {
  margin-top: clamp(1.5rem, 9vw, 3rem);
  margin-bottom: clamp(1.6rem, 7vw, 2rem);
  display: flex;
  justify-content: space-between;
  align-items: center;

  h1 {
    font-weight: 700;
    font-size: $c32-to-64;
    margin: 0;
  }

  p {
    color: $purple;
    font-size: $c18-to-24;
    line-height: $c24-to-29;
    margin: .5rem 0;
  }
}

.source {
  // places link and new window icon together on the next line
  // when it doesn't fit next to the h3
  font-size: 0.875rem;
  display: flex;
  flex-wrap: wrap;
  gap: clamp(10px, 2vw, 20px);
  padding: 1rem 0 3rem;
  border-top: 1px solid $gray3;
  margin-top: 2rem;

  h3 {
    color: $gray5;
    font-weight: 400;
    font-size: inherit;
    line-height: inherit;
    margin: 0;
    width: 6ch;
  }

  .linkdiv {
    width: max-content;
  }

  a {
    color: inherit;
  }

  svg {
    display: inline-block;
    margin-left: 10px;
  }
}

// entry section

.entrysection {

  /* line after h2 using pseudoelement borrowed from
  https://codepen.io/danrigsby/pen/waOOvw */

  h2 {
    font-weight: 700;
    font-style: italic;
    font-size: $c18-to-24;
    margin-bottom: 1rem;
    position: relative;
    overflow: hidden;

    span {
      display: block;
      position: relative;
    }

    span::after {
      content: '';
      position: absolute;
      border-top: 1px solid $gray6;
      width: 100%;
      top: 50%;
      margin-left: 20px;
    }
  }

  h3 {
    color: $gray5;
    font-weight: 400;
    font-size: $c16-to-20;
    line-height: $c20-to-24;
  }

  ul {
    margin-bottom: clamp(2rem, 6vw, 3rem);
    padding-left: clamp(0px, 4vw, 40px);
  }

  li {
    margin-bottom: .5rem;
    padding-left: 10px;
  }

  li::marker {
    color: $purple;
  }
}

// if I apply spacing to the "meaning" h3, it has to be done
// separately from the "synonyms" one
.meaningh3 {
  padding-top: clamp(.75rem, 3vw, 1.25rem);
  padding-bottom: clamp(.5rem, 2vw, 1rem);
}

.example {
  color: $gray5;
  list-style-type: none;
}

.synonymssection {
  font-size: $c16-to-20;
  line-height: $c20-to-24;
  display: flex;
  gap: clamp(10px, 2vw, 20px);
  padding-bottom: 1rem;

  >* {
    margin: 0;
  }

  span {
    color: $purple;
    font-weight: 700;
    text-decoration: none;
    padding: 0 10px;
    display: inline-block;
    cursor: pointer;
  }
}


// play

.playbutton {
  /* 48px mobile, 75px tablet (768px) and above */
  height: clamp(48px, 12vw, 75px);
  width: clamp(48px, 12vw, 75px);
  background-color: inherit;
  border: none;
  border-radius: 50%;
  padding: 0;
}

.playsvg:hover {
  fill: white;

  circle {
    fill: $purple;
    opacity: 100%;
  }
}

// no result

.noresult {
  text-align: center;
  margin-top: clamp(2rem, 10vw, 7rem);

  h1 {
    // font-size: 1.25rem;
    font-size: $c16-to-20;
    font-weight: 700;
    margin-bottom: 2rem;
  }

  p {
    color: $gray5;
  }

  .emoji {
    // font-size: 64px;
    font-size: clamp(2.5rem, 9vw, 4rem);
  }
}


// darkmode styles
.app.darkmode {
  background-color: $gray1;
  color: white;

  h1,
  h2 {
    color: white;

    span::after {
      border-color: $gray4;
    }
  }

  .form-check-input {
    background-color: $purple;
  }

  .input {
    background-color: $gray2;
  }

  .playsvg circle {
    opacity: 100%;
    filter: brightness(20%);

    &:hover {
      filter: none;
    }

  }
}